main {
  grid-template-rows: repeat(7, auto) 0vw 70vw;
  grid-template-areas: "top-graphic"
                       "header"
                       "folio"
                       "filter"
                       "dots"
                       "possible"
                       "floss"
                       "socials"
                       "footer";
}

#heading {
  margin-bottom: 70px;
}

#tabs {
  opacity: 0;
}

.project {
  display: flex;
  flex-direction: column;
  position: relative;
  align-items: center;
  margin-bottom: 100px;
  z-index: 500;
}

.project article {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.project p {
  color: var(--light-2);
  text-align: center;
  width: 80vw;
  max-width: 400px;
  line-height: 2rem;
}

.project .link {
  position: relative;
  color: var(--accent);
  font-weight: 700;
  justify-self: center;
}

.project span, .project small{
  color: var(--accent);
  opacity: 0.8;
}

/* place graphical content within computer screen graphic 
make all graphic elements responsive 
again, css variables mess with validator but code works*/
.monitor {
  --monitor-color: #ffffff96;

  --monitor-width: 80vw;
  --monitor-height: calc(var(--monitor-width) * 0.75);

  --max-monitor-width: 500px;
  --max-monitor-height: calc(var(--max-monitor-width) * 0.75);
}

.image-border {
  position: relative;
  display: flex;
  justify-content: center;

  width: var(--monitor-width);
  height: var(--monitor-height);

  max-width: var(--max-monitor-width);
  max-height: var(--max-monitor-height);

  border: 2px solid var(--monitor-color);
  border-radius: 15px;
}

.image-border::after {
  content: '';
  position: absolute;
  width: var(--monitor-width);
  max-width: var(--max-monitor-width);
  height: 2px;
  bottom: 4%;
  background-color: var(--monitor-color);
}

.image-wrapper {
  position: absolute;
  overflow: hidden;
  border-radius: 15px;
  top: 3.5%;
  margin-top: 0px;
}

.image-wrapper, .carousel-cell, .carousel-cell img, .flickity-viewport{
  width: calc(var(--monitor-width) * (76 / 80));
  height: calc(var(--monitor-height) * (53 / 60));

  max-width: calc(var(--max-monitor-width) * (76 / 80));
  max-height: calc(var(--max-monitor-height) * (53 / 60));
}

iframe {
  border: none;
}

/* light styling of carousel */
.flickity-page-dots .dot {
  opacity: 0.6;
  background: white;
}

.flickity-page-dots {
  bottom: 10%;
}

.flickity-button, .flickity-button:hover {
  background: transparent;
}

.image-wrapper img, .image-wrapper iframe {
  width: inherit;
  height: inherit;

  max-width: inherit;
  max-height: inherit;
}

/* continue styling monitor graphic */
.frame-base {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: baseline;
  width: 100%;
  margin-top: 5px;
  margin-bottom: 40px;
}

.left-stand, .right-stand, .bottom-stand {
  position: relative;
  background-color: var(--monitor-color);
}

.left-stand, .right-stand {
  height: calc(var(--monitor-width) * 0.07);
  max-height: calc(var(--max-monitor-width) * 0.07);
  width: 2px;
}

.left-stand {
  transform: rotate(15deg);
  left: 6%;
}

.right-stand {
  transform: rotate(-15deg);
  left: -6%;
}

.bottom-stand {
  width: calc(var(--monitor-width) * 0.25);
  max-width: calc(var(--max-monitor-width) * 0.25);
  height: 2px;
  transform: translateY(7px);
}
/* end graphic styling */

time {
  color: var(--accent);
  opacity: 0.8;
  font-size: 0.7rem;
  margin-bottom: 20px;
}

#portfolio {
  grid-area: folio;
}

#filter {
  grid-area: filter;
}

#dots {
  grid-area: dots;
}

#possible {
  grid-area: possible;
}

#flossily {
  grid-area: floss;
}

#flossily svg, #filter svg{
  fill: white;
  height: 30px;
  stroke: var(--dark-4);
}

#flossily svg:hover, #filter svg:hover{
  fill: var(--accent);
}